Task_3: Пояснительная записка
Автор: Хооллгм Михаил Уулларгович БПИ 207


Описание задания:
Вариант задания: 269, номер задания: 3, номер функции: 20

Задание № 3.
    Объёмная (трёхмерная) геометрическая фигура.
        Базовые альтернативы: 
            1. Шар (целочисленный радиус)
            2. Параллелепипед (три целочисленных ребра)
            3. Правильный тетраэдр (длина ребра – целое)
        Общие для всех альтернатив переменные:
            Плотность материала фигуры (действительное число)
        Общие для всех альтернатив функции:
            Вычисление объема (действительное число)


Функция № 20.
    Удалить из контейнера те элементы, для которых значение, полученное с использованием функции, общей для всех альтернатив, больше
чем среднее арифметическое для всех элементов контейнера, полученное с использованием этой же функции. Остальные элементы передвинуть в началу контейнера с сохранением порядка.

Структурная схема разработанной программы: [см. Class Scheme.pptx]


Характеристика программы
Структура исходного кода:

Файлы:
	1.  main.py
        2.  container.py
	3.  shape.py
        4.  sphere.py
        5.  parallelepiped.py
        6.  tetrahedron.py
	7.  Statics.py

Размер исходного кода:
    Общий размер исходных текстов: 6,81 КБ (6 978 байт)
    Размер проекта(включая тесты): 1,23 МБ (1 296 675 байт)
    Размер исполняемого кода: -
 
Время (сек.) выполнения программы и сравнение с C++ процедурным и C++ ООП подходами:

При random генерации:

    -------------------------------------------------------------------------------------
    | Количество фигур  |  C++ процедурный  |  Python динамический  |     Изменение     |
    -------------------------------------------------------------------------------------
    |        10         |      0.00103      |        0.00400        |     +0.00297      |
    |        100        |      0.00142      |        0.00601        |     +0.00459      |
    |        1000       |      0.00427      |        0.02993        |     +0.02566      |
    |        10000      |      0.05563      |        0.38876        |     +0.33313      |
    -------------------------------------------------------------------------------------

    -------------------------------------------------------------------------------------
    | Количество фигур  |      C++ ООП      |  Python динамический  |     Изменение     |
    -------------------------------------------------------------------------------------
    |        10         |      0.00043      |        0.00400        |     +0.00357      |
    |        100        |      0.00108      |        0.00601        |     +0.00493      |
    |        1000       |      0.00349      |        0.02993        |     +0.02644      |
    |        10000      |      0.05107      |        0.38876        |     +0.33769      |
    -------------------------------------------------------------------------------------
Чтение из файла:

    ---------------------------------------------------------------------------------------------
    |           Тест            |  C++ процедурный  |  Python динамический  |     Изменение     |
    ---------------------------------------------------------------------------------------------
    |     input_test_01.txt     |      0.00199      |        0.00399        |     +0.00200      |
    |     input_test_02.txt     |      0.00222      |        0.00400        |     +0.00178      |
    |     input_test_03.txt     |      0.00264      |        0.00500        |     +0.00236      |
    |     input_test_04.txt     |      0.00281      |        0.00589        |     +0.00308      |
    |     input_test_05.txt     |      0.00328      |        0.00601        |     +0.00273      |
    ---------------------------------------------------------------------------------------------

    ---------------------------------------------------------------------------------------------
    |           Тест            |      C++ ООП      |  Python динамический  |     Изменение     |
    ---------------------------------------------------------------------------------------------
    |     input_test_01.txt     |      0.00092      |        0.00399        |     +0.00307      |
    |     input_test_02.txt     |      0.00175      |        0.00400        |     +0.00225      |
    |     input_test_03.txt     |      0.00221      |        0.00500        |     +0.00279      |
    |     input_test_04.txt     |      0.00263      |        0.00589        |     +0.00326      |
    |     input_test_05.txt     |      0.00291      |        0.00601        |     +0.00310      |
    ---------------------------------------------------------------------------------------------

Выводы:
Python с динамической типизацией работает значительно медленне, чем С++ функциональный и ООП.

Для проверяющих:

Примечание:
	Не забудьте поменять '/' на '\' для Windows.

Тесты : ./Task_3/input_tests

Результаты тестов: ./Task_3/output_tests

Результаты random тестов: ./Task_3/output_random_tests

Входные тесты:

-f input_tests/input_test_01.txt output_tests/output_test_01_01.txt output_tests/output_test_01_02.txt
-f input_tests/input_test_02.txt output_tests/output_test_02_01.txt output_tests/output_test_02_02.txt
-f input_tests/input_test_03.txt output_tests/output_test_03_01.txt output_tests/output_test_03_02.txt
-f input_tests/input_test_04.txt output_tests/output_test_04_01.txt output_tests/output_test_04_02.txt
-f input_tests/input_test_05.txt output_tests/output_test_05_01.txt output_tests/output_test_05_02.txt

Random тесты:
-n 10 output_random_tests/output_random_test_01_01.txt output_random_tests/output_random_test_01_02.txt
-n 100 output_random_tests/output_random_test_02_01.txt output_random_tests/output_random_test_02_02.txt
-n 1000 output_random_tests/output_random_test_03_01.txt output_random_tests/output_random_test_03_02.txt
-n 10000 output_random_tests/output_random_test_04_01.txt output_random_tests/output_random_test_04_02.txt