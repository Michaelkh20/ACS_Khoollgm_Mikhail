Task_2: Пояснительная записка
Автор: Хооллгм Михаил Уулларгович БПИ 207


Описание задания:
Вариант задания: 269, номер задания: 3, номер функции: 20

Задание № 3.
    Объёмная (трёхмерная) геометрическая фигура.
        Базовые альтернативы: 
            1. Шар (целочисленный радиус)
            2. Параллелепипед (три целочисленных ребра)
            3. Правильный тетраэдр (длина ребра – целое)
        Общие для всех альтернатив переменные:
            Плотность материала фигуры (действительное число)
        Общие для всех альтернатив функции:
            Вычисление объема (действительное число)


Функция № 20.
    Удалить из контейнера те элементы, для которых значение, полученное с использованием функции, общей для всех альтернатив, больше
чем среднее арифметическое для всех элементов контейнера, полученное с использованием этой же функции. Остальные элементы передвинуть в началу контейнера с сохранением порядка.

Структурная схема разработанной программы:
Таблица типов:
    ---------------------------------------------------------------------------------------------------------
    |    Типы                      |    Память(байты) и стартовые точки индексов                            |
    |  int                         |  4                                                                     |
    ---------------------------------------------------------------------------------------------------------
    |  double                      |  8                                                                     |
    ---------------------------------------------------------------------------------------------------------
    | class Shape                  |  8                                                                     |
    |    double density            |  8[0]                                                                  |
    ---------------------------------------------------------------------------------------------------------
    | class Sphere : Shape         |  4 + 8(Shape)                                                          |
    |    int radius                |  4[8]                                                                  |
    ---------------------------------------------------------------------------------------------------------
    | class Parallelepiped : Shape |  12 + 8(Shape)                                                         |
    |    int a                     |  4[0]                                                                  |
    |    int b                     |  4[4]                                                                  |
    |    int c                     |  4[8]                                                                  |
    ---------------------------------------------------------------------------------------------------------
    | class Tetrahedron : Shape    |  4 + 8(Shape)                                                          |
    |    int edge                  |  4[0]                                                                  |
    ---------------------------------------------------------------------------------------------------------
    | class Container              |  80004                                                                 |
    |    int length                |  4[0]                                                                  |
    |    Shape *container          |  8 * 10000 = 80000[4]                                                  |
    ---------------------------------------------------------------------------------------------------------
Память программы:
    --------------------------- -----------------------------------------------------------------------------
    | main()                       |                                                                        |
    |    int argc                  |  4[0]                                                                  |
    |    char* argv                |  4[4]                                                                  |
    |    Container c               |  80004[8]                                 		                    |
    ---------------------------------------------------------------------------------------------------------


Характеристика программы
Структура исходного кода:

Файлы:
        1.  Container.cpp
        2.  Container.h
        3.  Sphere.cpp
        4.  Sphere.h
        5.  main.cpp
        6.  Shape.cpp
	7.  Shape.h
        8.  Parallelepiped.cpp
        9.  Parallelepiped.h
        10. Random.h
        11. Tetrahedron.cpp
        12. Tetrahedron.h

Размер исходного кода:
    Общий размер исходных текстов: 10,4 КБ (10 678 байт)
    Размер проекта(включая тесты): 1,41 МБ (1 478 855 байт)
    Размер исполняемого кода: 2,27 МБ (2 385 481 байт)

Время выполнения программы и сравнение с процедурным подходом:

При random генерации:

    --------------------------------------------------------------------------------------
    | Количество фигур  | Время (сек.) ООП | Время (сек.) процедурный |     Изменение    |
    --------------------------------------------------------------------------------------
    |        10         |      0.00043     |          0.00103         |     -0.00060     |
    |        100        |      0.00108     |          0.00142         |     -0.00034     |
    |        1000       |      0.00349     |          0.00427         |     -0.00078     |
    |        10000      |      0.05107     |          0.05563         |     -0.00456     |
    --------------------------------------------------------------------------------------
Чтение из файла:

    ----------------------------------------------------------------------------------------------
    |           Тест            | Время (сек.) ООП | Время (сек.) процедурный |     Изменение    |
    ----------------------------------------------------------------------------------------------
    |     input_test_01.txt     |      0.00092     |          0.00199         |     -0.00107     |
    |     input_test_02.txt     |      0.00175     |          0.00222         |     -0.00047     |
    |     input_test_03.txt     |      0.00221     |          0.00264         |     -0.00043     |
    |     input_test_04.txt     |      0.00263     |          0.00281         |     -0.00018     |
    |     input_test_05.txt     |      0.00291     |          0.00328         |     -0.00037     |
    ----------------------------------------------------------------------------------------------
Для проверяющих:

Примечание:
	Не забудьте поменять '/' на '\' для Windows.
	Если проект не компилируется, попробуйте добавить "set(CMAKE_EXE_LINKER_FLAGS "-static")" в CMakeLists.txt .

Тесты : ./Task_2/cmake-build-debug/input_tests

Результаты тестов: ./Task_2/cmake-build-debug/output_tests

Результаты random тестов: ./Task_2/cmake-build-debug/output_random_tests

Входные тесты:

-f input_tests/input_test_01.txt output_tests/output_test_01_01.txt output_tests/output_test_01_02.txt
-f input_tests/input_test_02.txt output_tests/output_test_02_01.txt output_tests/output_test_02_02.txt
-f input_tests/input_test_03.txt output_tests/output_test_03_01.txt output_tests/output_test_03_02.txt
-f input_tests/input_test_04.txt output_tests/output_test_04_01.txt output_tests/output_test_04_02.txt
-f input_tests/input_test_05.txt output_tests/output_test_05_01.txt output_tests/output_test_05_02.txt

Random тесты:
-n 10 output_random_tests/output_random_test_01_01.txt output_random_tests/output_random_test_01_02.txt
-n 100 output_random_tests/output_random_test_02_01.txt output_random_tests/output_random_test_02_02.txt
-n 1000 output_random_tests/output_random_test_03_01.txt output_random_tests/output_random_test_03_02.txt
-n 10000 output_random_tests/output_random_test_04_01.txt output_random_tests/output_random_test_04_02.txt